@model UserViewModel
<div class="row">
    <!-- left column -->
    <div class="col-md-12">
        <!-- general form elements -->
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Edit your information</h3>
            </div>
            <h3 style="color: green">@Html.ValidationMessage("error")</h3>
            <!-- /.card-header -->
            <!-- form start -->
            <form method="post" asp-action="Profile" enctype="multipart/form-data" id="createPostForm">
                <input type="hidden" asp-for="UserID" />
                <div class="card-body">
                    <div class="form-group">
                        <label>Name</label>
                        <input type="text" class="form-control" id="txtUsername" asp-for="Username" maxlength="30">
                    </div>
                    <div class="form-group">
                        <label>Email address</label>
                        <input type="email" class="form-control" id="txtEmail" asp-for="Email" readonly>
                    </div>
                    <div class="form-group">
                        <label>Password</label>
                        <br />
                        <label><i>(Enter password if you want to change password)</i></label>
                        <input type="password" class="form-control" id="txtPassword" asp-for="Password" maxlength="20">
                    </div>
                    <div class="form-group">
                        <label>Phone</label>
                        <input type="text" class="form-control" id="txtPhone" asp-for="Phone" maxlength="10">
                    </div>
                    <div class="form-group">
                        <label>Address of Employee</label>
                        <input type="text" asp-for="Address" class="form-control" maxlength="50" />
                    </div>
                    <div class="form-group">
                        <div class="form-group">
                            <label>Avatar</label>
                            <input type="file" id="txtImage" asp-for="AvatarUrl" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2"></div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <img src="@Model.CMNDAfterUrl" style="width: 250px; height: 200px" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <img src="@Model.CMNDBeforeUrl" style="width: 250px; height: 200px" />
                            </div>
                        </div>
                        <div class="col-md-2"></div>
                    </div>
                    <div class="form-group">
                        <label>Male</label>
                        <input type="radio" asp-for="Gender" value=true />
                        <label>Female</label>
                        <input type="radio" asp-for="Gender" value=false />
                    </div>
                    <div class="form-group">
                        <label>Birthday</label>
                        <input type="text" asp-for="Birthday" class="form-control" />
                    </div>
                </div>
                <!-- /.card-body -->

                <div class="card-footer">
                    <button type="submit" class="btn btn-primary" id="btnSubmit">Submit</button>
                </div>
            </form>
        </div>
        <!-- /.card -->
    </div>
</div>
<script>
    $(document).ready(function () {
        var maxBirthdayDate = new Date();
        maxBirthdayDate.setFullYear(maxBirthdayDate.getFullYear() - 18);
        var minBirthdayDate = new Date();
        minBirthdayDate.setFullYear(minBirthdayDate.getFullYear() - 60);
        $('input#Birthday').daterangepicker({
            singleDatePicker: true,
            startDate: '1/1/1990',
            maxDate: maxBirthdayDate,
            minDate: minBirthdayDate,
            locale: {
                format: 'DD/MM/YYYY'
            }
        });
    });
    function isVietnamesePhoneNumber(number) {
        return /(03|05|07|08|09|01[2|6|8|9])+([0-9]{7,8})\b/.test(number);
    }
    $("#createPostForm").submit(function (e) {
        var count = 0;
        $(".Error").remove();
        if ($("#txtUsername").val().trim() == "" || $("#txtUsername").val() == null) {
            $("<div><i style='color:red' class='Error'>Không được để trống</div>").insertAfter("#txtUsername");
            count++;
        }

        if ($("#txtEmail").val().trim() == "" || $("#txtEmail").val() == null) {
            $("<div><i style='color:red' class='Error'>Không được để trống</div>").insertAfter("#txtEmail");
            count++;
        }

        if ($("#txtPhone").val().trim() == "" || $("#txtPhone").val() == null) {
            $("<div><i style='color:red' class='Error'>Không được để trống</div>").insertAfter("#txtPhone");
            count++;
        }
        if ($("#Address").val().trim() == "" || $("#Address").val() == null) {
            $("<div><i style='color:red' class='Error'>Can't not blank phone</div>").insertAfter("#Address");
            count++;
        }
        if (!isVietnamesePhoneNumber($("#txtPhone").val())) {
            $("<div><i style='color:red' class='Error'>Phone is invalid, please enter character 0 - 9.</div>").insertAfter("#txtPhone");
            count++;
        }
        if (count > 0) {
            return false;
        }
    })
    function showAll() {
        $.ajax({
            url: "/User/User/IndexPartial",
            method: "get",
            success: function (res) {
                $("#index_partial").html("");
                $("#index_partial").html(res.html);
            },
        })
    }
</script>
