// <auto-generated />
using System;
using FourN.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FourN.Data.Migrations
{
    [DbContext(typeof(FourNDbContext))]
    [Migration("20210626125351_add-column-in-group-user")]
    partial class addcolumningroupuser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FourN.Data.Models.Affairs", b =>
                {
                    b.Property<int>("affairid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("affairname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("affairtag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("projectid")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeofaffair")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("affairid");

                    b.HasIndex("projectid");

                    b.ToTable("Affairs");
                });

            modelBuilder.Entity("FourN.Data.Models.Assigns", b =>
                {
                    b.Property<int>("assignid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("affairid")
                        .HasColumnType("int");

                    b.Property<DateTime>("begintime")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("docid")
                        .HasColumnType("int");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("endtime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("leaderid")
                        .HasColumnType("int");

                    b.Property<string>("memberid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("projectid")
                        .HasColumnType("int");

                    b.Property<string>("typeofaffair")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("assignid");

                    b.HasIndex("docid");

                    b.HasIndex("projectid");

                    b.ToTable("Assigns");
                });

            modelBuilder.Entity("FourN.Data.Models.Authapplication", b =>
                {
                    b.Property<int>("authapplicationid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("displayname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("authapplicationid");

                    b.ToTable("Authapplication");

                    b.HasData(
                        new
                        {
                            authapplicationid = 1,
                            displayname = "Người Dùng",
                            name = "User"
                        },
                        new
                        {
                            authapplicationid = 2,
                            displayname = "Project Cost",
                            name = "KOPC"
                        },
                        new
                        {
                            authapplicationid = 3,
                            displayname = "Group",
                            name = "KOPC"
                        },
                        new
                        {
                            authapplicationid = 4,
                            displayname = "Over Time",
                            name = "KOPC"
                        },
                        new
                        {
                            authapplicationid = 5,
                            displayname = "KPI",
                            name = "KOPC"
                        });
                });

            modelBuilder.Entity("FourN.Data.Models.Authcontroller", b =>
                {
                    b.Property<int>("authcontrollerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("authapplicationid")
                        .HasColumnType("int");

                    b.Property<string>("display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iconclass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("authcontrollerid");

                    b.HasIndex("authapplicationid");

                    b.ToTable("Authcontroller");

                    b.HasData(
                        new
                        {
                            authcontrollerid = 1,
                            authapplicationid = 1,
                            display = "Danh Sách Người Dùng",
                            iconclass = "fas fa-users",
                            name = "User"
                        },
                        new
                        {
                            authcontrollerid = 2,
                            authapplicationid = 2,
                            display = "Cost",
                            iconclass = "fas fa-dollar-sign",
                            name = "Projectcost"
                        },
                        new
                        {
                            authcontrollerid = 3,
                            authapplicationid = 3,
                            display = "All Group",
                            iconclass = "fas fa-user-friends",
                            name = "Group"
                        },
                        new
                        {
                            authcontrollerid = 4,
                            authapplicationid = 4,
                            display = "Overtime request",
                            iconclass = "fas fa-business-time",
                            name = "Overtime"
                        },
                        new
                        {
                            authcontrollerid = 5,
                            authapplicationid = 5,
                            display = "Member's KPI",
                            iconclass = "fas fa-calculator",
                            name = "KPI"
                        });
                });

            modelBuilder.Entity("FourN.Data.Models.Authuser", b =>
                {
                    b.Property<int>("authappliactionid")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("authappliactionid", "userid");

                    b.HasIndex("userid");

                    b.ToTable("Authuser");

                    b.HasData(
                        new
                        {
                            authappliactionid = 1,
                            userid = 1
                        },
                        new
                        {
                            authappliactionid = 2,
                            userid = 1
                        },
                        new
                        {
                            authappliactionid = 3,
                            userid = 1
                        },
                        new
                        {
                            authappliactionid = 4,
                            userid = 1
                        },
                        new
                        {
                            authappliactionid = 5,
                            userid = 1
                        });
                });

            modelBuilder.Entity("FourN.Data.Models.Authuserrole", b =>
                {
                    b.Property<int>("authapplicationid")
                        .HasColumnType("int");

                    b.Property<int>("userroleid")
                        .HasColumnType("int");

                    b.HasKey("authapplicationid", "userroleid");

                    b.HasIndex("userroleid");

                    b.ToTable("Authuserrole");
                });

            modelBuilder.Entity("FourN.Data.Models.ChangeStatusProject", b =>
                {
                    b.Property<int>("changeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("affairid")
                        .HasColumnType("int");

                    b.Property<int>("leaderid")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("projectid")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("changeid");

                    b.HasIndex("affairid");

                    b.ToTable("Changestatusprojects");
                });

            modelBuilder.Entity("FourN.Data.Models.Departmentpartner", b =>
                {
                    b.Property<int>("departmentpartnerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("department")
                        .HasColumnType("int");

                    b.Property<string>("desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("timeend")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("departmentpartnerid");

                    b.ToTable("Departmentpartner");
                });

            modelBuilder.Entity("FourN.Data.Models.Documents", b =>
                {
                    b.Property<int>("docid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("authorname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("authorrole")
                        .HasColumnType("int");

                    b.Property<string>("files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("docid");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("FourN.Data.Models.Groups", b =>
                {
                    b.Property<int>("groupid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("groupname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("groupid");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("FourN.Data.Models.Groupuser", b =>
                {
                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.Property<int>("groupid")
                        .HasColumnType("int");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isleader")
                        .HasColumnType("bit");

                    b.HasKey("userid", "groupid");

                    b.HasIndex("groupid");

                    b.ToTable("Groupuser");
                });

            modelBuilder.Entity("FourN.Data.Models.KPIs", b =>
                {
                    b.Property<int>("kpiid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("membername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projectdone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.Property<string>("worktime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kpiid");

                    b.HasIndex("userid");

                    b.ToTable("KPIs");
                });

            modelBuilder.Entity("FourN.Data.Models.Otime", b =>
                {
                    b.Property<int>("otid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("projectmanageid")
                        .HasColumnType("int");

                    b.Property<string>("reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("timedelay")
                        .HasColumnType("datetime2");

                    b.HasKey("otid");

                    b.HasIndex("projectmanageid");

                    b.ToTable("Otime");
                });

            modelBuilder.Entity("FourN.Data.Models.Partner", b =>
                {
                    b.Property<int>("partnerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("departmentpartnerid")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fileurl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.HasKey("partnerid");

                    b.HasIndex("departmentpartnerid");

                    b.ToTable("Partner");
                });

            modelBuilder.Entity("FourN.Data.Models.PrivateMessage", b =>
                {
                    b.Property<int>("messageid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("messageid");

                    b.ToTable("PrivateMessage");
                });

            modelBuilder.Entity("FourN.Data.Models.ProjectManages", b =>
                {
                    b.Property<int>("projectmanageid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("endday")
                        .HasColumnType("datetime2");

                    b.Property<string>("members")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("projectid")
                        .HasColumnType("int");

                    b.Property<DateTime>("startday")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("projectmanageid");

                    b.HasIndex("projectid")
                        .IsUnique()
                        .HasFilter("[projectid] IS NOT NULL");

                    b.ToTable("Projectmanages");
                });

            modelBuilder.Entity("FourN.Data.Models.Projectcost", b =>
                {
                    b.Property<int>("projectcostid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("actualcosts")
                        .HasColumnType("float");

                    b.Property<double?>("costsincurred")
                        .HasColumnType("float");

                    b.Property<string>("currencyunit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("estimatedcosts")
                        .HasColumnType("float");

                    b.Property<int?>("projectid")
                        .HasColumnType("int");

                    b.Property<string>("projectname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("projectcostid");

                    b.ToTable("Projectcost");
                });

            modelBuilder.Entity("FourN.Data.Models.Projects", b =>
                {
                    b.Property<int>("projectid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("projectcostid")
                        .HasColumnType("int");

                    b.Property<int?>("projectmanageid")
                        .HasColumnType("int");

                    b.Property<string>("projectname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("projectid");

                    b.HasIndex("projectcostid")
                        .IsUnique()
                        .HasFilter("[projectcostid] IS NOT NULL");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("FourN.Data.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isemployee")
                        .HasColumnType("bit");

                    b.Property<bool>("islead")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userid");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            userid = 1,
                            email = "admin@gmail.com",
                            isdeleted = false,
                            isemployee = false,
                            islead = false,
                            password = "123456789",
                            phone = "0123456789",
                            username = "Admin"
                        });
                });

            modelBuilder.Entity("FourN.Data.Models.Userrole", b =>
                {
                    b.Property<int>("userroleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("displayname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isprivate")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userroleid");

                    b.ToTable("Userrole");
                });

            modelBuilder.Entity("FourN.Data.Models.Useruserrole", b =>
                {
                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.Property<int>("userroleid")
                        .HasColumnType("int");

                    b.HasKey("userid", "userroleid");

                    b.HasIndex("userroleid");

                    b.ToTable("Useruserrole");
                });

            modelBuilder.Entity("FourN.Data.Models.Zoom", b =>
                {
                    b.Property<int>("zoomid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("zoomid");

                    b.ToTable("Zoom");
                });

            modelBuilder.Entity("FourN.Data.Models.Affairs", b =>
                {
                    b.HasOne("FourN.Data.Models.Projects", "Project")
                        .WithMany("Affairs")
                        .HasForeignKey("projectid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("FourN.Data.Models.Assigns", b =>
                {
                    b.HasOne("FourN.Data.Models.Documents", "Document")
                        .WithMany("Assigns")
                        .HasForeignKey("docid");

                    b.HasOne("FourN.Data.Models.Projects", "Projects")
                        .WithMany("Assigns")
                        .HasForeignKey("projectid");

                    b.Navigation("Document");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("FourN.Data.Models.Authcontroller", b =>
                {
                    b.HasOne("FourN.Data.Models.Authapplication", "authapplication")
                        .WithMany("authcontrollers")
                        .HasForeignKey("authapplicationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("authapplication");
                });

            modelBuilder.Entity("FourN.Data.Models.Authuser", b =>
                {
                    b.HasOne("FourN.Data.Models.Authapplication", "authapplication")
                        .WithMany("authuser")
                        .HasForeignKey("authappliactionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourN.Data.Models.User", "user")
                        .WithMany("authusers")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("authapplication");

                    b.Navigation("user");
                });

            modelBuilder.Entity("FourN.Data.Models.Authuserrole", b =>
                {
                    b.HasOne("FourN.Data.Models.Authapplication", "authapplication")
                        .WithMany("authuserroles")
                        .HasForeignKey("authapplicationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourN.Data.Models.Userrole", "userrole")
                        .WithMany("authuserroles")
                        .HasForeignKey("userroleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("authapplication");

                    b.Navigation("userrole");
                });

            modelBuilder.Entity("FourN.Data.Models.ChangeStatusProject", b =>
                {
                    b.HasOne("FourN.Data.Models.Affairs", "Affair")
                        .WithMany("Changes")
                        .HasForeignKey("affairid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Affair");
                });

            modelBuilder.Entity("FourN.Data.Models.Groupuser", b =>
                {
                    b.HasOne("FourN.Data.Models.Groups", "group")
                        .WithMany("groupusers")
                        .HasForeignKey("groupid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourN.Data.Models.User", "user")
                        .WithMany("groupusers")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("group");

                    b.Navigation("user");
                });

            modelBuilder.Entity("FourN.Data.Models.KPIs", b =>
                {
                    b.HasOne("FourN.Data.Models.User", "user")
                        .WithMany("kpi")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("FourN.Data.Models.Otime", b =>
                {
                    b.HasOne("FourN.Data.Models.ProjectManages", "ProjectManages")
                        .WithMany("Otime")
                        .HasForeignKey("projectmanageid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectManages");
                });

            modelBuilder.Entity("FourN.Data.Models.Partner", b =>
                {
                    b.HasOne("FourN.Data.Models.Departmentpartner", "departmentpartner")
                        .WithMany("partners")
                        .HasForeignKey("departmentpartnerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("departmentpartner");
                });

            modelBuilder.Entity("FourN.Data.Models.ProjectManages", b =>
                {
                    b.HasOne("FourN.Data.Models.Projects", "Project")
                        .WithOne("Manages")
                        .HasForeignKey("FourN.Data.Models.ProjectManages", "projectid");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("FourN.Data.Models.Projects", b =>
                {
                    b.HasOne("FourN.Data.Models.Projectcost", "Projectcosts")
                        .WithOne("Projects")
                        .HasForeignKey("FourN.Data.Models.Projects", "projectcostid");

                    b.Navigation("Projectcosts");
                });

            modelBuilder.Entity("FourN.Data.Models.Useruserrole", b =>
                {
                    b.HasOne("FourN.Data.Models.User", "user")
                        .WithMany("useruserroles")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourN.Data.Models.Userrole", "userrole")
                        .WithMany("useruserroles")
                        .HasForeignKey("userroleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");

                    b.Navigation("userrole");
                });

            modelBuilder.Entity("FourN.Data.Models.Affairs", b =>
                {
                    b.Navigation("Changes");
                });

            modelBuilder.Entity("FourN.Data.Models.Authapplication", b =>
                {
                    b.Navigation("authcontrollers");

                    b.Navigation("authuser");

                    b.Navigation("authuserroles");
                });

            modelBuilder.Entity("FourN.Data.Models.Departmentpartner", b =>
                {
                    b.Navigation("partners");
                });

            modelBuilder.Entity("FourN.Data.Models.Documents", b =>
                {
                    b.Navigation("Assigns");
                });

            modelBuilder.Entity("FourN.Data.Models.Groups", b =>
                {
                    b.Navigation("groupusers");
                });

            modelBuilder.Entity("FourN.Data.Models.ProjectManages", b =>
                {
                    b.Navigation("Otime");
                });

            modelBuilder.Entity("FourN.Data.Models.Projectcost", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("FourN.Data.Models.Projects", b =>
                {
                    b.Navigation("Affairs");

                    b.Navigation("Assigns");

                    b.Navigation("Manages");
                });

            modelBuilder.Entity("FourN.Data.Models.User", b =>
                {
                    b.Navigation("authusers");

                    b.Navigation("groupusers");

                    b.Navigation("kpi");

                    b.Navigation("useruserroles");
                });

            modelBuilder.Entity("FourN.Data.Models.Userrole", b =>
                {
                    b.Navigation("authuserroles");

                    b.Navigation("useruserroles");
                });
#pragma warning restore 612, 618
        }
    }
}
