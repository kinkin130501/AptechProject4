#pragma checksum "E:\FPT-Aptech\Project Sem4\FourN-final\FourN-final\FourN-20-7-2021\C#Project\Partner\Views\Question\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e029c79e020d98a170b1a8d13ce1e10d972df376"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Question_Index), @"mvc.1.0.view", @"/Views/Question/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\FPT-Aptech\Project Sem4\FourN-final\FourN-final\FourN-20-7-2021\C#Project\Partner\Views\_ViewImports.cshtml"
using Partner;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\FPT-Aptech\Project Sem4\FourN-final\FourN-final\FourN-20-7-2021\C#Project\Partner\Views\_ViewImports.cshtml"
using Partner.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\FPT-Aptech\Project Sem4\FourN-final\FourN-final\FourN-20-7-2021\C#Project\Partner\Views\_ViewImports.cshtml"
using FourN.Data.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\FPT-Aptech\Project Sem4\FourN-final\FourN-final\FourN-20-7-2021\C#Project\Partner\Views\_ViewImports.cshtml"
using FourN.Data.ViewModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\FPT-Aptech\Project Sem4\FourN-final\FourN-final\FourN-20-7-2021\C#Project\Partner\Views\_ViewImports.cshtml"
using Partner.Helper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\FPT-Aptech\Project Sem4\FourN-final\FourN-final\FourN-20-7-2021\C#Project\Partner\Views\_ViewImports.cshtml"
using FourN.Data.EnumModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\FPT-Aptech\Project Sem4\FourN-final\FourN-final\FourN-20-7-2021\C#Project\Partner\Views\_ViewImports.cshtml"
using static FourN.Data.SystemEnum;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e029c79e020d98a170b1a8d13ce1e10d972df376", @"/Views/Question/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"53a1f87bb51e19b0bda39ed97d9e7ff4998c32d9", @"/Views/_ViewImports.cshtml")]
    public class Views_Question_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<QuestionDisplayViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_IndexPartial", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "E:\FPT-Aptech\Project Sem4\FourN-final\FourN-final\FourN-20-7-2021\C#Project\Partner\Views\Question\Index.cshtml"
  
    ViewData["Title"] = "Bộ câu hỏi";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"container\">\n    <br />\n    <div style=\"margin-top:15px\" id=\"subMenu\">\n        <button type=\"button\" class=\"btn btn-primary\" style=\"margin-right:20px;\" onclick=\"showCreate()\">Create Question</button>\n");
            WriteLiteral("    </div>\n\n\n    <div id=\"IndexPartial\" style=\"display:block; margin-top:15px\">\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e029c79e020d98a170b1a8d13ce1e10d972df3765174", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#nullable restore
#line 42 "E:\FPT-Aptech\Project Sem4\FourN-final\FourN-final\FourN-20-7-2021\C#Project\Partner\Views\Question\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Model = Model.Questions;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("model", __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Model, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>

</div>

<script>
    function showAll() {
        $.ajax({
            url: ""/Question/IndexPartial"",
            method: ""get"",
            success: function (res) {
                $(""#IndexPartial"").html("""");
                $(""#IndexPartial"").html(res.html);
                $(""#subMenu"").show();
                clearAnswerSession();
                clearEditAnswerSession();
            },
        })
    }

    function showCreate() {
        $.ajax({
            url: ""/Question/Create"",
            method: ""get"",
            success: function (res) {
                $(""#IndexPartial"").html("""");
                $(""#IndexPartial"").html(res.html);
                $(""#subMenu"").hide();
                clearAnswerSession();
            },
            error: function () {
                toastr.error(""Create is failed !!"")
            }
        })

    }

    function showCreateGroupQuestion() {
        $.ajax({
            url: ""/Question/CreateGroupQuestion"",
            method: ""get"",
          ");
            WriteLiteral(@"  success: function (res) {
                $(""#IndexPartial"").html("""");
                $(""#IndexPartial"").html(res.html);
                $(""#subMenu"").hide();
                clearAnswerSession();
            },
            error: function () {
                toastr.error(""Processing has error, please try again !"");
            }
        })
    }

    function showEdit(id) {
        $.ajax({
            url: ""/Question/Edit/"" + id,
            method: ""get"",

            success: function (res) {
                $(""#IndexPartial"").html("""");
                $(""#IndexPartial"").html(res.html);
                $(""#subMenu"").hide();
                var checkQuestionType = parseInt($(""#txtQuestionType option:selected"").val());
                if (checkQuestionType == 1) { //trac nghiem
                    showAnswersInSession(id);
                } else {
                    showAnswersInSessionTuLuan(id);
                }
            },
        })
    }

    function showDetails(id) {
        $.ajax({
       ");
            WriteLiteral(@"     url: ""/Question/Details"",
            method: ""post"",
            data: {
                id: id
            },
            success: function (res) {
                $(""#IndexPartial"").html("""");
                $(""#IndexPartial"").html(res.html);
                $(""#subMenu"").hide();
            },
            error: function () {
                toastr.error(""Processing has error, please try again !"")
            }
        })
    }

    function showAnswer(questionId) {
        $.ajax({
            url: ""/Answer/IndexWithEditColumn/"" + questionId,
            method: ""get"",
            success: function (res) {
                $(""#showAnswer"").html("""");
                $(""#showAnswer"").html(res.html);
            }
        })
    }

    function showAnswersInSession() {
        $.ajax({
            url: ""/Answer/ShowAnswersInSession"",
            method: ""get"",
            success: function (res) {
                $(""#showAnswer"").html("""");
                $(""#showAnswer"").html(res.html);
            }
 ");
            WriteLiteral(@"       })
    }

    function showAnswersInSessionTuLuan() {
        $.ajax({
            url: ""/Answer/ShowAnswersInSessionTuLuan"",
            method: ""get"",
            success: function (res) {
                $(""#showAnswer"").html("""");
                $(""#showAnswer"").html(res.html);
            }
        })
    }

    function showCreateAnswer(questionId) {
        var checkQuestionType = parseInt($(""#txtQuestionType option:selected"").val());
        if (checkQuestionType == 1) { //trac nghiem
            $.ajax({
                url: ""/Answer/CreateAnswer"",
                method: ""get"",
                data: {
                    questionId: parseInt(questionId)
                },
                success: function (res) {
                    $(""#showCreateAnswer"").html("""");
                    $(""#showCreateAnswer"").html(res.html);
                    $(""#btnAddAnswer"").prop(""type"", ""hidden"");
                },
                error: function () {
                    toastr.error(""Có lỗi xảy ra, thử ");
            WriteLiteral(@"lại sau"")
                }
            })
        } else {
            $.ajax({
                url: ""/Answer/CreateAnswerTuLuan"",
                method: ""get"",
                data: {
                    questionId: parseInt(questionId)
                },
                success: function (res) {
                    $(""#showCreateAnswer"").html("""");
                    $(""#showCreateAnswer"").html(res.html);
                    $(""#btnAddAnswer"").prop(""type"", ""hidden"");
                },
                error: function () {
                    toastr.error(""Có lỗi xảy ra, thử lại sau"")
                }
            })
        }

    }

    function addAnswer(questionId) {
        if ($(""#txtAnswerContent"").val().trim() == """") {
            $(""<div><i style='color:red' id='Error'>Not blank</div>"").insertAfter(""#txtAnswerContent"");
            return false;
        }
        $.ajax({
            url: ""/Answer/AddItemToSession"",
            type: ""post"",
            data: {
                txtAnswerContent: $(");
            WriteLiteral(@"""#txtAnswerContent"").val(),
                txtAnswerIsCorrect: $(""#txtAnswerIsCorrect:checked"").length > 0,
                txtAnswerQuestionId: parseInt(questionId)
            },
            success: function (res) {
                toastr.success(""Successed !!"");
                showAnswersInSession();
                showCreateAnswer(questionId);
            },
            error: function () {
                toastr.error(""Failed !!"");
            }
        });
    }

    function addAnswerTuLuan(questionId) {
        if ($(""#txtAnswerContent"").val().trim() == """") {
            $(""<div><i style='color:red' id='Error'>Not blank</div>"").insertAfter(""#txtAnswerContent"");
            return false;
        }
        $.ajax({
            url: ""/Answer/AddItemToSessionTuLuan"",
            type: ""post"",
            data: {
                txtAnswerContent: $(""#txtAnswerContent"").val(),
                txtAnswerIsCorrect: $(""#txtAnswerIsCorrect:checked"").length > 0,
                txtAnswerQuestionId: parseInt(q");
            WriteLiteral(@"uestionId)
            },
            success: function (res) {
                toastr.success(""Successed !!!"");
                showAnswersInSessionTuLuan();
                showCreateAnswer(questionId);
            },
            error: function () {
                toastr.error(""Failed !!"");
            }
        });
    }

    function removeAnswer(prefix) {


        $.ajax({
            url: ""/Answer/RemoveItemFromSession"",
            type: ""post"",
            data: {
                txtAnswerContent: $(""#answer-content-"" + prefix).text().trim(),
                txtAnswerIsCorrect: $(""#answer-correct-"" + prefix).text().trim() == """" ? false : true,
            },
            success: function (res) {
                toastr.success(""Successed !!!"");
                showAnswersInSession()
            },
            error: function () {
                toastr.error(""Failed !!"");
            }
        });
    }


    function showDelete(id) {

        var isOk = confirm(""Are you sure ?"");
        var locati");
            WriteLiteral(@"on = $(""#location"").val();
        var txtQuestionId = parseInt($(""#txtGroupId"").val());

        if (isOk) {
            $.ajax({
                url: ""/Question/Delete/"" + id,
                method: ""post"",
                success: function () {
                    if (location == 'QuestionListDeTails') {
                        showQuestionListDetails(txtQuestionId);
                    } else {
                        showAll();
                    }
                    toastr.success(""Question number "" + id + "" is deleted !"");
                }
            });
        } else {
            if (location == 'QuestionListDeTails') {
                showQuestionListDetails(txtQuestionId);
            } else {
                showAll();
            }
        }

    }

    function clearAnswerSession() {
        $.ajax({
            url: ""/Answer/ClearAnswerSession"",
            type: ""get""
        });
    }

    function clearEditAnswerSession() {
        $.ajax({
            url: ""/Answer/ClearEditAnswerSess");
            WriteLiteral(@"ion"",
            type: ""get""
        });
    }

    //bo cau hoi
    function showCreateQuestion() {
        $.ajax({
            url: ""/Question/CreateQuestionInGroup"",
            method: ""get"",
            success: function (res) {
                $(""#showCreateQuestion"").html("""");
                $(""#showCreateQuestion"").html(res.html);
                $(""#btnAddQuestion"").prop(""type"", ""hidden"");
            },
            error: function () {
                toastr.error(""Processing has error, please try again."")
            }
        })
    }

    function rollBack(id) {
        var isOk = confirm(""Các thay đổi chưa được lưu! Bạn có chắc muốn hoàn thành tác vụ này?"");
        if (isOk) {
            $.ajax({
                url: ""/Question/DeleteQuestionGroup"",
                data: {
                    id: parseInt(id)
                },
                method: ""post"",
                success: function () {
                    showAll();
                }
            });
        } else {
            ");
            WriteLiteral(@"return false;
        }
    }

    function showQuestionListDetails(id) {
        $.ajax({
            url: ""/Question/QuestionListDetails"",
            method: ""post"",
            data: {
                id: id
            },
            success: function (res) {
                $(""#IndexPartial"").html("""");
                $(""#IndexPartial"").html(res.html);
                $(""#subMenu"").hide();
            },
            error: function () {
                toastr.error(""Processing has error, please try again."")
            }
        })
    }

    $(""#btnFilter"").off().click(function () {
        var dateStart = $(""#txtDateStart"").val();
        var dateEnd = $(""#txtDateEnd"").val();
        var courseId = $(""#CourseId"").val();
        var questionType = $(""#QuestionType"").val();

        $.ajax({
            url: ""/Question/SearchQuestions"",
            method: ""POST"",
            data: {
                CourseId: courseId,
                QuestionType: questionType,
                DateStart: dateStart,
   ");
            WriteLiteral(@"             DateEnd: dateEnd,
            },
            success: function (res) {
                $(""#IndexPartial"").html("""");
                $(""#IndexPartial"").html(res.html);
                $("".subMenu"").show();
            },
        })
    })
</script>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<QuestionDisplayViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
